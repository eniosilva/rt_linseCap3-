%!PS-Adobe-2.0 EPSF-2.0
%%Title: matrixdefault.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Sep  2 11:20:14 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (matrixdefault.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (enio,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  2 11:20:14 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
9496 7963 N
0 -7035 V
545 0 V
0 7035 V
-545 0 V
Z stroke
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 9496 7963 N 9496 928 L 10041 928 L 10041 7963 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  9224 7963 M
  1090 0 V
  0 -7035 V
  -1090 0 V
  9224 7963 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 650 string def
  currentfile imagebuf readstring
} {
gsave
9224 7963 translate
1090 -7035 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 2
  /Height 256
  /BitsPerComponent 8
  /ImageMatrix [ 2 0 0 256 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
s8W)trVcZlqtp6dq>'g\p\4CTp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND!ijlPRaj5].YiSi
_Qhr!;Ih;-lAgY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._
83q&^V@Ls]tM(k]=YYc\[f5[\$rfS[C*BKZa6sCZ*CO;YHP+3Xf\\+X/i8#WMuhpVl-DhV59u`USFQ
XTqS-PT:_^HSXl:@S"#k8R@0G0Q^=#(Q'ISuPEV/mOcb`eO,o<]NK&mUMi3IMM2@%ELPLV=KnY25K7
ec-JUr?%It)orI=6KjH[C'bH$OXZGB\4RF`heJF)uABEH,r:Df9N2D/F**CMR["Bk_6oB4kggAS#C_
@q/tW@:<PO?XI,G?!U]?>?b97=]nj/='&F'<E3!t;c?Rl;,L.d:JX_\9he;T91qlL8P)HD7n6$<77B
U46UO1,5s[b$5<h=q4Ztni4$,Ja3B9&Y2`EWQ2)R3I1G^dA0ek@90/"q1/M/M).k<)!.4HYn-RU5f,
paf^,9nBV+X%sN+!2OF*??+>)]K\6)&X8.(Ddi&'bqDs',(uk&J5Qc%hB-[%1N^S$O[:K#mgkC#6tG
;"U,#3!s8T+!<E0#~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
10041 928 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MLshow
0.500 UL
LTb
10041 2335 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 2335 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MLshow
0.500 UL
LTb
10041 3742 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 3742 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MLshow
0.500 UL
LTb
10041 5149 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 5149 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MLshow
0.500 UL
LTb
10041 6556 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 6556 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MLshow
0.500 UL
LTb
10041 7963 M
-88 0 V
-457 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10125 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (1)]
] -40.0 MLshow
0.500 UL
LTb
0.500 UL
LTb
9496 7963 N
0 -7035 V
545 0 V
0 7035 V
-545 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 7963 N
0 -7035 V
7140 0 V
0 7035 V
-7140 0 V
Z stroke
5045 8173 M
[ [(*-bold) 300.0 0.0 true true 0 (KNN-Padrao)]
] -100.0 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 1475 928 N 1475 7963 L 8615 7963 L 8615 928 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  1118 8315 M
  7854 0 V
  0 -7739 V
  -7854 0 V
  1118 8315 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 155 string def
  currentfile imagebuf readstring
} {
gsave
1118 8315 translate
7854 -7739 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 11
  /Height 11
  /BitsPerComponent 8
  /ImageMatrix [ 11 0 0 11 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
QNdO#%0?M1.Kg4bUB_51"p"`B!u:nBPQ_'j"9fnY)[HlSV#gl/!u)+L&-;k8OpVKs)[I>^"T\f4Rhu
5;%i#'F!<iT=VumGD&-2n:#6G)6XU5^S"U5,7"9S`,[0dfP!!*'"!WrH,k6M(j!W`?(!W`l;eG~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
1475 7963 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvP)]
] -40.0 MRshow
0.500 UL
LTb
1475 7260 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7260 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvA)]
] -40.0 MRshow
0.500 UL
LTb
1475 6556 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 6556 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvG)]
] -40.0 MRshow
0.500 UL
LTb
1475 5853 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5853 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvL)]
] -40.0 MRshow
0.500 UL
LTb
1475 5149 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5149 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVP)]
] -40.0 MRshow
0.500 UL
LTb
1475 4446 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 4446 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVA)]
] -40.0 MRshow
0.500 UL
LTb
1475 3742 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3742 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVL)]
] -40.0 MRshow
0.500 UL
LTb
1475 3039 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3039 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVV)]
] -40.0 MRshow
0.500 UL
LTb
1475 2335 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 2335 M
[ [(Helvetica) 120.0 0.0 true true 0 (O)]
] -40.0 MRshow
0.500 UL
LTb
1475 1632 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 1632 M
[ [(Helvetica) 120.0 0.0 true true 0 (N)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
88 0 V
7052 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (V)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 1475 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvP)]
] -40.0 MCshow
0.500 UL
LTb
2189 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 2189 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvA)]
] -40.0 MCshow
0.500 UL
LTb
2903 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 2903 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvG)]
] -40.0 MCshow
0.500 UL
LTb
3617 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 3617 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvL)]
] -40.0 MCshow
0.500 UL
LTb
4331 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 4331 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVP)]
] -40.0 MCshow
0.500 UL
LTb
5045 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 5045 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVA)]
] -40.0 MCshow
0.500 UL
LTb
5759 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 5759 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVL)]
] -40.0 MCshow
0.500 UL
LTb
6473 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 6473 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVV)]
] -40.0 MCshow
0.500 UL
LTb
7187 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 7187 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (O)]
] -40.0 MCshow
0.500 UL
LTb
7901 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 7901 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (N)]
] -40.0 MCshow
0.500 UL
LTb
8615 928 M
0 88 V
0 6947 R
0 -88 V
stroke
0.00 0.00 0.00 C 8615 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (V)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7963 N
0 -7035 V
7140 0 V
0 7035 V
-7140 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: *-bold Helvetica
