%!PS-Adobe-2.0 EPSF-2.0
%%Title: classificacaofull.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Sep  2 11:20:30 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (classificacaofull.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (enio,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep  2 11:20:30 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
10207 3878 N
0 -2950 V
118 0 V
0 2950 V
-118 0 V
Z stroke
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 10207 3878 N 10207 928 L 10325 928 L 10325 3878 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  10148 3878 M
  236 0 V
  0 -2950 V
  -236 0 V
  10148 3878 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 650 string def
  currentfile imagebuf readstring
} {
gsave
10148 3878 translate
236 -2950 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 2
  /Height 256
  /BitsPerComponent 8
  /ImageMatrix [ 2 0 0 256 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
s8W)trVcZlqtp6dq>'g\p\4CTp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND!ijlPRaj5].YiSi
_Qhr!;Ih;-lAgY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._
83q&^V@Ls]tM(k]=YYc\[f5[\$rfS[C*BKZa6sCZ*CO;YHP+3Xf\\+X/i8#WMuhpVl-DhV59u`USFQ
XTqS-PT:_^HSXl:@S"#k8R@0G0Q^=#(Q'ISuPEV/mOcb`eO,o<]NK&mUMi3IMM2@%ELPLV=KnY25K7
ec-JUr?%It)orI=6KjH[C'bH$OXZGB\4RF`heJF)uABEH,r:Df9N2D/F**CMR["Bk_6oB4kggAS#C_
@q/tW@:<PO?XI,G?!U]?>?b97=]nj/='&F'<E3!t;c?Rl;,L.d:JX_\9he;T91qlL8P)HD7n6$<77B
U46UO1,5s[b$5<h=q4Ztni4$,Ja3B9&Y2`EWQ2)R3I1G^dA0ek@90/"q1/M/M).k<)!.4HYn-RU5f,
paf^,9nBV+X%sN+!2OF*??+>)]K\6)&X8.(Ddi&'bqDs',(uk&J5Qc%hB-[%1N^S$O[:K#mgkC#6tG
;"U,#3!s8T+!<E0#~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
10325 928 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MLshow
0.500 UL
LTb
10325 1518 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 1518 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MLshow
0.500 UL
LTb
10325 2108 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 2108 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MLshow
0.500 UL
LTb
10325 2698 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 2698 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MLshow
0.500 UL
LTb
10325 3288 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 3288 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MLshow
0.500 UL
LTb
10325 3878 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 3878 M
[ [(Helvetica) 120.0 0.0 true true 0 (1)]
] -40.0 MLshow
0.500 UL
LTb
0.500 UL
LTb
10207 3878 N
0 -2950 V
118 0 V
0 2950 V
-118 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
8586 3878 N
0 -2950 V
1451 0 V
0 2950 V
-1451 0 V
Z stroke
9311 4088 M
[ [(*-bold) 200.0 0.0 true true 0 (KNN-Fric.N.Voz.)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 8586 928 N 8586 3878 L 10037 3878 L 10037 928 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  8344 4370 M
  1935 0 V
  0 -3934 V
  -1935 0 V
  8344 4370 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 22 string def
  currentfile imagebuf readstring
} {
gsave
8344 4370 translate
1935 -3934 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 4
  /Height 4
  /BitsPerComponent 8
  /ImageMatrix [ 4 0 0 4 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
aVP?t%a>Lu#S#Su$5X8u~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
8586 3878 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 3878 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvP)]
] -40.0 MRshow
0.500 UL
LTb
8586 2895 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 2895 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvA)]
] -40.0 MRshow
0.500 UL
LTb
8586 1911 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 1911 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvG)]
] -40.0 MRshow
0.500 UL
LTb
8586 928 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvL)]
] -40.0 MRshow
0.500 UL
LTb
8586 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 8586 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvP)]
] -40.0 MCshow
0.500 UL
LTb
9070 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 9070 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvA)]
] -40.0 MCshow
0.500 UL
LTb
9553 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 9553 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvG)]
] -40.0 MCshow
0.500 UL
LTb
10037 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 10037 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FNvL)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
8586 3878 N
0 -2950 V
1451 0 V
0 2950 V
-1451 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
3845 3878 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
4750 4088 M
[ [(*-bold) 200.0 0.0 true true 0 (KNN-Fric.Voz.)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 3845 928 N 3845 3878 L 5656 3878 L 5656 928 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  3543 4370 M
  2415 0 V
  0 -3934 V
  -2415 0 V
  3543 4370 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 22 string def
  currentfile imagebuf readstring
} {
gsave
3543 4370 translate
2415 -3934 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 4
  /Height 4
  /BitsPerComponent 8
  /ImageMatrix [ 4 0 0 4 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
cPI)t$IKju#TD:u"qD0u~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
3845 3878 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 3878 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVP)]
] -40.0 MRshow
0.500 UL
LTb
3845 2895 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 2895 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVA)]
] -40.0 MRshow
0.500 UL
LTb
3845 1911 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 1911 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVL)]
] -40.0 MRshow
0.500 UL
LTb
3845 928 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVV)]
] -40.0 MRshow
0.500 UL
LTb
3845 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3845 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVP)]
] -40.0 MCshow
0.500 UL
LTb
4449 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 4449 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVA)]
] -40.0 MCshow
0.500 UL
LTb
5052 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 5052 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVL)]
] -40.0 MCshow
0.500 UL
LTb
5656 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 5656 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (FVV)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
3845 3878 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
10207 7963 N
0 -2950 V
118 0 V
0 2950 V
-118 0 V
Z stroke
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 10207 7963 N 10207 5013 L 10325 5013 L 10325 7963 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  10148 7963 M
  236 0 V
  0 -2950 V
  -236 0 V
  10148 7963 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 650 string def
  currentfile imagebuf readstring
} {
gsave
10148 7963 translate
236 -2950 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 2
  /Height 256
  /BitsPerComponent 8
  /ImageMatrix [ 2 0 0 256 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
s8W)trVcZlqtp6dq>'g\p\4CTp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND!ijlPRaj5].YiSi
_Qhr!;Ih;-lAgY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._
83q&^V@Ls]tM(k]=YYc\[f5[\$rfS[C*BKZa6sCZ*CO;YHP+3Xf\\+X/i8#WMuhpVl-DhV59u`USFQ
XTqS-PT:_^HSXl:@S"#k8R@0G0Q^=#(Q'ISuPEV/mOcb`eO,o<]NK&mUMi3IMM2@%ELPLV=KnY25K7
ec-JUr?%It)orI=6KjH[C'bH$OXZGB\4RF`heJF)uABEH,r:Df9N2D/F**CMR["Bk_6oB4kggAS#C_
@q/tW@:<PO?XI,G?!U]?>?b97=]nj/='&F'<E3!t;c?Rl;,L.d:JX_\9he;T91qlL8P)HD7n6$<77B
U46UO1,5s[b$5<h=q4Ztni4$,Ja3B9&Y2`EWQ2)R3I1G^dA0ek@90/"q1/M/M).k<)!.4HYn-RU5f,
paf^,9nBV+X%sN+!2OF*??+>)]K\6)&X8.(Ddi&'bqDs',(uk&J5Qc%hB-[%1N^S$O[:K#mgkC#6tG
;"U,#3!s8T+!<E0#~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
10325 5013 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 5013 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MLshow
0.500 UL
LTb
10325 5603 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 5603 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MLshow
0.500 UL
LTb
10325 6193 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 6193 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MLshow
0.500 UL
LTb
10325 6783 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 6783 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.6)]
] -40.0 MLshow
0.500 UL
LTb
10325 7373 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 7373 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.8)]
] -40.0 MLshow
0.500 UL
LTb
10325 7963 M
-88 0 V
-30 0 R
88 0 V
stroke
0.00 0.00 0.00 C 10409 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (1)]
] -40.0 MLshow
0.500 UL
LTb
0.500 UL
LTb
10207 7963 N
0 -2950 V
118 0 V
0 2950 V
-118 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
8586 7963 N
0 -2950 V
1451 0 V
0 2950 V
-1451 0 V
Z stroke
9311 8173 M
[ [(*-bold) 200.0 0.0 true true 0 (KNN-Voze)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 8586 5013 N 8586 7963 L 10037 7963 L 10037 5013 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  7861 9438 M
  2902 0 V
  0 -5900 V
  -2902 0 V
  7861 9438 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 7 string def
  currentfile imagebuf readstring
} {
gsave
7861 9438 translate
2902 -5900 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 2
  /Height 2
  /BitsPerComponent 8
  /ImageMatrix [ 2 0 0 2 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
iuAm!~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
8586 7963 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (Nao-Voz.)]
] -40.0 MRshow
0.500 UL
LTb
8586 5013 M
88 0 V
1363 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 8502 5013 M
[ [(Helvetica) 120.0 0.0 true true 0 (Voz.)]
] -40.0 MRshow
0.500 UL
LTb
8586 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 8586 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (Nao-Voz.)]
] -40.0 MCshow
0.500 UL
LTb
10037 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 10037 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (Voz.)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
8586 7963 N
0 -2950 V
1451 0 V
0 2950 V
-1451 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
3845 7963 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
4750 8173 M
[ [(*-bold) 200.0 0.0 true true 0 (KNN-BGP)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UL
LT0
LTb
%%%%BeginImage
gsave 3845 5013 N 3845 7963 L 5656 7963 L 5656 5013 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  3543 8455 M
  2415 0 V
  0 -3934 V
  -2415 0 V
  3543 8455 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 22 string def
  currentfile imagebuf readstring
} {
gsave
3543 8455 translate
2415 -3934 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   000000 050505 111111 1a1a1a 202020 262626 2b2b2b 303030
   333333 373737 383838 3c3c3c 3f3f3f 404040 414141 444444
   464646 484848 4a4a4a 4c4c4c 4d4d4d 4f4f4f 505050 515151
   535353 555555 555555 575757 585858 595959 5b5b5b 5d5d5d
   5d5d5d 5e5e5e 5f5f5f 606060 616161 626262 626262 636363
   646464 646464 656565 666666 666666 676767 686868 696969
   6a6a6a 6b6b6b 6b6b6b 6c6c6c 6d6d6d 6d6d6d 6e6e6e 6f6f6f
   6f6f6f 707070 717171 717171 727272 737373 737373 747474
   757575 767676 767676 777777 787878 787878 797979 7a7a7a
   7a7a7a 7b7b7b 7c7c7c 7c7c7c 7d7d7d 7e7e7e 7e7e7e 7f7f7f
   808080 818181 818181 828282 838383 838383 848484 858585
   858585 868686 878787 878787 888888 898989 898989 8a8a8a
   8b8b8b 8c8c8c 8c8c8c 8d8d8d 8e8e8e 8e8e8e 8f8f8f 909090
   909090 919191 929292 929292 939393 949494 949494 959595
   969696 979797 979797 989898 999999 999999 9a9a9a 9b9b9b
   9b9b9b 9c9c9c 9d9d9d 9d9d9d 9e9e9e 9f9f9f 9f9f9f a0a0a0
   a1a1a1 a2a2a2 a2a2a2 a3a3a3 a4a4a4 a4a4a4 a5a5a5 a6a6a6
   a6a6a6 a7a7a7 a8a8a8 a8a8a8 a9a9a9 aaaaaa aaaaaa ababab
   acacac adadad adadad aeaeae afafaf afafaf b0b0b0 b1b1b1
   b1b1b1 b2b2b2 b3b3b3 b3b3b3 b4b4b4 b5b5b5 b5b5b5 b6b6b6
   b7b7b7 b8b8b8 b9b9b9 bababa bababa bcbcbc bcbcbc bdbdbd
   bebebe bfbfbf c0c0c0 c0c0c0 c2c2c2 c3c3c3 c3c3c3 c4c4c4
   c5c5c5 c5c5c5 c6c6c6 c7c7c7 c7c7c7 c9c9c9 c9c9c9 cbcbcb
   cbcbcb cccccc cdcdcd cecece cfcfcf d0d0d0 d0d0d0 d1d1d1
   d2d2d2 d3d3d3 d4d4d4 d4d4d4 d5d5d5 d6d6d6 d6d6d6 d7d7d7
   d8d8d8 d9d9d9 dadada dbdbdb dbdbdb dcdcdc dddddd dddddd
   dedede dfdfdf dfdfdf e0e0e0 e1e1e1 e1e1e1 e2e2e2 e3e3e3
   e4e4e4 e4e4e4 e5e5e5 e6e6e6 e6e6e6 e7e7e7 e8e8e8 e8e8e8
   e9e9e9 eaeaea eaeaea ebebeb ececec ececec ededed eeeeee
   efefef efefef f0f0f0 f1f1f1 f1f1f1 f3f3f3 f3f3f3 f4f4f4
   f5f5f5 f5f5f5 f6f6f6 f7f7f7 f7f7f7 f8f8f8 f9f9f9 fafafa
   fafafa fbfbfb fcfcfc fcfcfc fdfdfd fefefe fefefe ffffff
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 4
  /Height 4
  /BitsPerComponent 8
  /ImageMatrix [ 4 0 0 4 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
b8(Hu,.Ipu$3]Pu&J,/u~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
0.500 UL
LTb
3845 7963 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (F)]
] -40.0 MRshow
0.500 UL
LTb
3845 6980 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 6980 M
[ [(Helvetica) 120.0 0.0 true true 0 (O)]
] -40.0 MRshow
0.500 UL
LTb
3845 5996 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 5996 M
[ [(Helvetica) 120.0 0.0 true true 0 (N)]
] -40.0 MRshow
0.500 UL
LTb
3845 5013 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 3761 5013 M
[ [(Helvetica) 120.0 0.0 true true 0 (V)]
] -40.0 MRshow
0.500 UL
LTb
3845 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3845 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (F)]
] -40.0 MCshow
0.500 UL
LTb
4449 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 4449 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (O)]
] -40.0 MCshow
0.500 UL
LTb
5052 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 5052 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (N)]
] -40.0 MCshow
0.500 UL
LTb
5656 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 5656 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (V)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
3845 7963 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
6215 928 M
1812 0 V
stroke
0.500 UL
LTb
6215 928 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 1518 M
1812 0 V
stroke
0.500 UL
LTb
6215 1518 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 1518 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 2108 M
1812 0 V
stroke
0.500 UL
LTb
6215 2108 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 2108 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 2698 M
1812 0 V
stroke
0.500 UL
LTb
6215 2698 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 2698 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 3288 M
1812 0 V
stroke
0.500 UL
LTb
6215 3288 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 3288 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 3878 M
1812 0 V
stroke
0.500 UL
LTb
6215 3878 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 3878 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6448 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6448 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6448 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
6707 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6707 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6707 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
6966 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6966 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6966 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7225 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7225 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7225 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7483 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7483 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7483 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7742 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7742 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7742 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
8001 928 M
0 2950 V
stroke
0.500 UL
LTb
8001 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 8001 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
6215 3878 N
0 -2950 V
1812 0 V
0 2950 V
-1812 0 V
Z stroke
0.00 0.00 0.00 C 7121 578 M
[ [(Helvetica) 150.0 0.0 true true 0 (# atributos)]
] -50.0 MCshow
LTb
7121 4088 M
[ [(*-bold) 200.0 0.0 true true 0 (Artic. \(Cl. Nao-voz.\))]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C LTb
7376 3745 M
[ [(Helvetica) 140.0 0.0 true true 0 (MI Fric. N.-voz.)]
] -46.7 MRshow
LT0
0.00 0.00 1.00 C 7460 3745 M
399 0 V
-1644 80 R
26 -382 V
26 -346 V
26 -470 V
26 -166 V
25 -116 V
26 -233 V
26 -101 V
26 -93 V
26 -59 V
26 -9 V
26 -6 V
26 -52 V
26 -10 V
25 5 V
26 -35 V
26 -9 V
26 -65 V
26 -142 V
26 8 V
26 -8 V
26 -5 V
25 -18 V
26 -13 V
26 -7 V
26 -32 V
26 -16 V
26 -39 V
26 -9 V
26 -11 V
26 16 V
25 -55 V
26 13 V
26 12 V
26 18 V
26 -12 V
26 21 V
26 13 V
26 -13 V
26 5 V
25 5 V
26 8 V
26 3 V
26 5 V
26 -7 V
26 -15 V
26 -4 V
26 17 V
26 -24 V
25 6 V
26 6 V
26 -18 V
26 17 V
26 6 V
26 5 V
26 -9 V
26 -7 V
25 18 V
26 -17 V
26 1 V
26 -37 V
26 21 V
26 -13 V
26 9 V
26 -2 V
26 16 V
25 2 V
26 3 V
26 -12 V
26 8 V
26 5 V
6215 3825 Crs
6241 3443 Crs
6267 3097 Crs
6293 2627 Crs
6319 2461 Crs
6344 2345 Crs
6370 2112 Crs
6396 2011 Crs
6422 1918 Crs
6448 1859 Crs
6474 1850 Crs
6500 1844 Crs
6526 1792 Crs
6552 1782 Crs
6577 1787 Crs
6603 1752 Crs
6629 1743 Crs
6655 1678 Crs
6681 1536 Crs
6707 1544 Crs
6733 1536 Crs
6759 1531 Crs
6784 1513 Crs
6810 1500 Crs
6836 1493 Crs
6862 1461 Crs
6888 1445 Crs
6914 1406 Crs
6940 1397 Crs
6966 1386 Crs
6992 1402 Crs
7017 1347 Crs
7043 1360 Crs
7069 1372 Crs
7095 1390 Crs
7121 1378 Crs
7147 1399 Crs
7173 1412 Crs
7199 1399 Crs
7225 1404 Crs
7250 1409 Crs
7276 1417 Crs
7302 1420 Crs
7328 1425 Crs
7354 1418 Crs
7380 1403 Crs
7406 1399 Crs
7432 1416 Crs
7458 1392 Crs
7483 1398 Crs
7509 1404 Crs
7535 1386 Crs
7561 1403 Crs
7587 1409 Crs
7613 1414 Crs
7639 1405 Crs
7665 1398 Crs
7690 1416 Crs
7716 1399 Crs
7742 1400 Crs
7768 1363 Crs
7794 1384 Crs
7820 1371 Crs
7846 1380 Crs
7872 1378 Crs
7898 1394 Crs
7923 1396 Crs
7949 1399 Crs
7975 1387 Crs
8001 1395 Crs
8027 1400 Crs
7659 3745 Crs
1.000 UP
0.500 UL
LT1
0.00 0.50 0.00 C LTb
7376 3605 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSF Fric. N.-voz.)]
] -46.7 MRshow
LT1
0.00 0.50 0.00 C 7460 3605 M
399 0 V
6215 3811 M
26 -503 V
26 -550 V
26 -226 V
26 -284 V
25 -115 V
26 -76 V
26 -78 V
26 -52 V
26 -79 V
26 -104 V
26 -37 V
26 -40 V
26 -27 V
25 -18 V
26 -5 V
26 -18 V
26 -4 V
26 -37 V
26 23 V
26 -18 V
26 -10 V
25 4 V
26 -11 V
26 12 V
26 -4 V
26 -1 V
26 -13 V
26 -10 V
26 -54 V
26 -30 V
25 -14 V
26 5 V
26 -3 V
26 -28 V
26 -27 V
26 -6 V
26 -14 V
26 -13 V
26 -9 V
25 9 V
26 11 V
26 -35 V
26 -2 V
26 -3 V
26 -7 V
26 -8 V
26 5 V
26 3 V
25 -1 V
26 -19 V
26 -3 V
26 1 V
26 23 V
26 12 V
26 10 V
26 1 V
25 5 V
26 -6 V
26 0 V
26 2 V
26 14 V
26 6 V
26 2 V
26 9 V
26 -4 V
25 16 V
26 -5 V
26 20 V
26 -2 V
26 9 V
6215 3811 BoxF
6241 3308 BoxF
6267 2758 BoxF
6293 2532 BoxF
6319 2248 BoxF
6344 2133 BoxF
6370 2057 BoxF
6396 1979 BoxF
6422 1927 BoxF
6448 1848 BoxF
6474 1744 BoxF
6500 1707 BoxF
6526 1667 BoxF
6552 1640 BoxF
6577 1622 BoxF
6603 1617 BoxF
6629 1599 BoxF
6655 1595 BoxF
6681 1558 BoxF
6707 1581 BoxF
6733 1563 BoxF
6759 1553 BoxF
6784 1557 BoxF
6810 1546 BoxF
6836 1558 BoxF
6862 1554 BoxF
6888 1553 BoxF
6914 1540 BoxF
6940 1530 BoxF
6966 1476 BoxF
6992 1446 BoxF
7017 1432 BoxF
7043 1437 BoxF
7069 1434 BoxF
7095 1406 BoxF
7121 1379 BoxF
7147 1373 BoxF
7173 1359 BoxF
7199 1346 BoxF
7225 1337 BoxF
7250 1346 BoxF
7276 1357 BoxF
7302 1322 BoxF
7328 1320 BoxF
7354 1317 BoxF
7380 1310 BoxF
7406 1302 BoxF
7432 1307 BoxF
7458 1310 BoxF
7483 1309 BoxF
7509 1290 BoxF
7535 1287 BoxF
7561 1288 BoxF
7587 1311 BoxF
7613 1323 BoxF
7639 1333 BoxF
7665 1334 BoxF
7690 1339 BoxF
7716 1333 BoxF
7742 1333 BoxF
7768 1335 BoxF
7794 1349 BoxF
7820 1355 BoxF
7846 1357 BoxF
7872 1366 BoxF
7898 1362 BoxF
7923 1378 BoxF
7949 1373 BoxF
7975 1393 BoxF
8001 1391 BoxF
8027 1400 BoxF
7659 3605 BoxF
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
1475 928 M
1811 0 V
stroke
0.500 UL
LTb
1475 928 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 1420 M
1811 0 V
stroke
0.500 UL
LTb
1475 1420 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 1420 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 1911 M
1811 0 V
stroke
0.500 UL
LTb
1475 1911 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 1911 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 2403 M
1811 0 V
stroke
0.500 UL
LTb
1475 2403 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 2403 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 2895 M
1811 0 V
stroke
0.500 UL
LTb
1475 2895 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 2895 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 3386 M
1811 0 V
stroke
0.500 UL
LTb
1475 3386 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3386 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 3878 M
1811 0 V
stroke
0.500 UL
LTb
1475 3878 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 3878 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1708 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
1708 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 1708 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
1967 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
1967 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 1967 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2225 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2225 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2225 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2484 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2484 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2484 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2743 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2743 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2743 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
3001 928 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
3001 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3001 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
3260 928 M
0 2950 V
stroke
0.500 UL
LTb
3260 928 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3260 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 3878 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
0.00 0.00 0.00 C 1069 2403 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (erro\(%\))]
] -50.0 MCshow
grestore
LTb
0.00 0.00 0.00 C 2380 578 M
[ [(Helvetica) 150.0 0.0 true true 0 (# atributos)]
] -50.0 MCshow
LTb
2380 4088 M
[ [(*-bold) 200.0 0.0 true true 0 (Artic. \(Cl. Voz.\))]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C LTb
2635 3745 M
[ [(Helvetica) 140.0 0.0 true true 0 (MI Fric. Voz.)]
] -46.7 MRshow
LT0
0.00 0.00 1.00 C 2719 3745 M
399 0 V
1475 3592 M
26 -97 V
26 -87 V
26 -63 V
25 -176 V
26 -316 V
26 -167 V
26 -93 V
26 -88 V
26 -50 V
26 -67 V
26 -115 V
25 -101 V
26 -46 V
26 -121 V
26 -81 V
26 -15 V
26 -13 V
26 -65 V
26 -56 V
25 -18 V
26 -42 V
26 -20 V
26 -16 V
26 -85 V
26 3 V
26 -31 V
26 -8 V
25 -39 V
26 8 V
26 -53 V
26 -5 V
26 1 V
26 17 V
26 -29 V
25 -51 V
26 -10 V
26 -17 V
26 4 V
26 -18 V
26 -5 V
26 4 V
26 -13 V
25 -20 V
26 16 V
26 -5 V
26 -18 V
26 5 V
26 14 V
26 -28 V
26 -9 V
25 -18 V
26 -4 V
26 -11 V
26 -2 V
26 -6 V
26 31 V
26 2 V
26 -6 V
25 3 V
26 7 V
26 -15 V
26 1 V
26 -5 V
26 12 V
26 11 V
26 15 V
25 -18 V
26 2 V
26 0 V
26 4 V
1475 3592 Crs
1501 3495 Crs
1527 3408 Crs
1553 3345 Crs
1578 3169 Crs
1604 2853 Crs
1630 2686 Crs
1656 2593 Crs
1682 2505 Crs
1708 2455 Crs
1734 2388 Crs
1760 2273 Crs
1785 2172 Crs
1811 2126 Crs
1837 2005 Crs
1863 1924 Crs
1889 1909 Crs
1915 1896 Crs
1941 1831 Crs
1967 1775 Crs
1992 1757 Crs
2018 1715 Crs
2044 1695 Crs
2070 1679 Crs
2096 1594 Crs
2122 1597 Crs
2148 1566 Crs
2174 1558 Crs
2199 1519 Crs
2225 1527 Crs
2251 1474 Crs
2277 1469 Crs
2303 1470 Crs
2329 1487 Crs
2355 1458 Crs
2380 1407 Crs
2406 1397 Crs
2432 1380 Crs
2458 1384 Crs
2484 1366 Crs
2510 1361 Crs
2536 1365 Crs
2562 1352 Crs
2587 1332 Crs
2613 1348 Crs
2639 1343 Crs
2665 1325 Crs
2691 1330 Crs
2717 1344 Crs
2743 1316 Crs
2769 1307 Crs
2794 1289 Crs
2820 1285 Crs
2846 1274 Crs
2872 1272 Crs
2898 1266 Crs
2924 1297 Crs
2950 1299 Crs
2976 1293 Crs
3001 1296 Crs
3027 1303 Crs
3053 1288 Crs
3079 1289 Crs
3105 1284 Crs
3131 1296 Crs
3157 1307 Crs
3183 1322 Crs
3208 1304 Crs
3234 1306 Crs
3260 1306 Crs
3286 1310 Crs
2918 3745 Crs
1.000 UP
0.500 UL
LT1
0.00 0.50 0.00 C LTb
2635 3605 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSF Fric. Voz.)]
] -46.7 MRshow
LT1
0.00 0.50 0.00 C 2719 3605 M
399 0 V
1475 3592 M
26 -89 V
26 -355 V
26 -106 V
25 -259 V
26 -142 V
26 -242 V
26 -164 V
26 -72 V
26 -152 V
26 -100 V
26 -125 V
25 -23 V
26 21 V
26 -76 V
26 -84 V
26 50 V
26 -63 V
26 -31 V
26 -29 V
25 -4 V
26 -9 V
26 -22 V
26 -29 V
26 -59 V
26 -26 V
26 -12 V
26 -3 V
25 -17 V
26 -17 V
26 -38 V
26 -2 V
26 -16 V
26 19 V
26 18 V
25 1 V
26 -19 V
26 -14 V
26 6 V
26 -19 V
26 -4 V
26 -19 V
26 -5 V
25 1 V
26 6 V
26 14 V
26 9 V
26 0 V
26 6 V
26 2 V
26 -5 V
25 -1 V
26 -9 V
26 -4 V
26 -4 V
26 -14 V
26 4 V
26 0 V
26 -1 V
25 -3 V
26 -5 V
26 14 V
26 9 V
26 17 V
26 8 V
26 11 V
26 6 V
25 0 V
26 -13 V
26 7 V
26 -6 V
1475 3592 BoxF
1501 3503 BoxF
1527 3148 BoxF
1553 3042 BoxF
1578 2783 BoxF
1604 2641 BoxF
1630 2399 BoxF
1656 2235 BoxF
1682 2163 BoxF
1708 2011 BoxF
1734 1911 BoxF
1760 1786 BoxF
1785 1763 BoxF
1811 1784 BoxF
1837 1708 BoxF
1863 1624 BoxF
1889 1674 BoxF
1915 1611 BoxF
1941 1580 BoxF
1967 1551 BoxF
1992 1547 BoxF
2018 1538 BoxF
2044 1516 BoxF
2070 1487 BoxF
2096 1428 BoxF
2122 1402 BoxF
2148 1390 BoxF
2174 1387 BoxF
2199 1370 BoxF
2225 1353 BoxF
2251 1315 BoxF
2277 1313 BoxF
2303 1297 BoxF
2329 1316 BoxF
2355 1334 BoxF
2380 1335 BoxF
2406 1316 BoxF
2432 1302 BoxF
2458 1308 BoxF
2484 1289 BoxF
2510 1285 BoxF
2536 1266 BoxF
2562 1261 BoxF
2587 1262 BoxF
2613 1268 BoxF
2639 1282 BoxF
2665 1291 BoxF
2691 1291 BoxF
2717 1297 BoxF
2743 1299 BoxF
2769 1294 BoxF
2794 1293 BoxF
2820 1284 BoxF
2846 1280 BoxF
2872 1276 BoxF
2898 1262 BoxF
2924 1266 BoxF
2950 1266 BoxF
2976 1265 BoxF
3001 1262 BoxF
3027 1257 BoxF
3053 1271 BoxF
3079 1280 BoxF
3105 1297 BoxF
3131 1305 BoxF
3157 1316 BoxF
3183 1322 BoxF
3208 1322 BoxF
3234 1309 BoxF
3260 1316 BoxF
3286 1310 BoxF
2918 3605 BoxF
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
6215 5013 M
1812 0 V
stroke
0.500 UL
LTb
6215 5013 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 5013 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 5603 M
1812 0 V
stroke
0.500 UL
LTb
6215 5603 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 5603 M
[ [(Helvetica) 120.0 0.0 true true 0 (15)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 6193 M
1812 0 V
stroke
0.500 UL
LTb
6215 6193 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 6193 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 6783 M
1812 0 V
stroke
0.500 UL
LTb
6215 6783 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 6783 M
[ [(Helvetica) 120.0 0.0 true true 0 (25)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 7373 M
1812 0 V
stroke
0.500 UL
LTb
6215 7373 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 7373 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6215 7963 M
1812 0 V
stroke
0.500 UL
LTb
6215 7963 M
88 0 V
1724 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 6131 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (35)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
6448 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6448 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6448 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
6707 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6707 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6707 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
6966 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
6966 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 6966 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7225 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7225 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7225 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7483 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7483 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7483 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
7742 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
7742 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 7742 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
8001 5013 M
0 2950 V
stroke
0.500 UL
LTb
8001 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 8001 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
6215 7963 N
0 -2950 V
1812 0 V
0 2950 V
-1812 0 V
Z stroke
0.00 0.00 0.00 C 7121 4663 M
[ [(Helvetica) 150.0 0.0 true true 0 (# atributos)]
] -50.0 MCshow
LTb
7121 8173 M
[ [(*-bold) 200.0 0.0 true true 0 (Vozeamento)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C LTb
7376 7830 M
[ [(Helvetica) 140.0 0.0 true true 0 (MI Vozeamento)]
] -46.7 MRshow
LT0
0.00 0.00 1.00 C 7460 7830 M
399 0 V
6215 7727 M
26 -356 V
26 115 V
26 -454 V
26 -52 V
25 -205 V
26 -138 V
26 -180 V
26 -122 V
26 -118 V
26 -17 V
26 -6 V
26 -21 V
26 -186 V
25 46 V
26 -142 V
26 44 V
26 -74 V
26 27 V
26 -127 V
26 -10 V
26 -7 V
25 -21 V
26 -43 V
26 -81 V
26 -10 V
26 -8 V
26 -80 V
26 -15 V
26 9 V
26 -39 V
25 -8 V
26 3 V
26 -11 V
26 -15 V
26 -21 V
26 27 V
26 -38 V
26 17 V
26 -58 V
25 -35 V
26 -7 V
26 -4 V
26 0 V
26 -11 V
26 -4 V
26 -25 V
26 -21 V
26 -31 V
25 -4 V
26 -7 V
26 -34 V
26 -8 V
26 -3 V
26 -2 V
26 -14 V
26 -4 V
25 0 V
26 -10 V
26 12 V
26 -6 V
26 11 V
26 -10 V
26 17 V
26 -18 V
26 12 V
25 -5 V
26 -15 V
26 -15 V
26 -24 V
26 0 V
6215 7727 Crs
6241 7371 Crs
6267 7486 Crs
6293 7032 Crs
6319 6980 Crs
6344 6775 Crs
6370 6637 Crs
6396 6457 Crs
6422 6335 Crs
6448 6217 Crs
6474 6200 Crs
6500 6194 Crs
6526 6173 Crs
6552 5987 Crs
6577 6033 Crs
6603 5891 Crs
6629 5935 Crs
6655 5861 Crs
6681 5888 Crs
6707 5761 Crs
6733 5751 Crs
6759 5744 Crs
6784 5723 Crs
6810 5680 Crs
6836 5599 Crs
6862 5589 Crs
6888 5581 Crs
6914 5501 Crs
6940 5486 Crs
6966 5495 Crs
6992 5456 Crs
7017 5448 Crs
7043 5451 Crs
7069 5440 Crs
7095 5425 Crs
7121 5404 Crs
7147 5431 Crs
7173 5393 Crs
7199 5410 Crs
7225 5352 Crs
7250 5317 Crs
7276 5310 Crs
7302 5306 Crs
7328 5306 Crs
7354 5295 Crs
7380 5291 Crs
7406 5266 Crs
7432 5245 Crs
7458 5214 Crs
7483 5210 Crs
7509 5203 Crs
7535 5169 Crs
7561 5161 Crs
7587 5158 Crs
7613 5156 Crs
7639 5142 Crs
7665 5138 Crs
7690 5138 Crs
7716 5128 Crs
7742 5140 Crs
7768 5134 Crs
7794 5145 Crs
7820 5135 Crs
7846 5152 Crs
7872 5134 Crs
7898 5146 Crs
7923 5141 Crs
7949 5126 Crs
7975 5111 Crs
8001 5087 Crs
8027 5087 Crs
7659 7830 Crs
1.000 UP
0.500 UL
LT1
0.00 0.50 0.00 C LTb
7376 7690 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSF Vozeamento)]
] -46.7 MRshow
LT1
0.00 0.50 0.00 C 7460 7690 M
399 0 V
6215 7956 M
26 -358 V
26 -82 V
26 -317 V
26 -248 V
25 -74 V
26 -230 V
26 -174 V
26 -303 V
26 -152 V
26 -90 V
26 -85 V
26 -121 V
26 -66 V
25 -98 V
26 13 V
26 -52 V
26 -35 V
26 -20 V
26 7 V
26 -32 V
26 -20 V
25 -32 V
26 -16 V
26 -5 V
26 -23 V
26 -60 V
26 -36 V
26 -16 V
26 -26 V
26 -32 V
25 -6 V
26 9 V
26 -31 V
26 -27 V
26 7 V
26 6 V
26 -8 V
26 -18 V
26 4 V
25 -5 V
26 -23 V
26 -9 V
26 14 V
26 1 V
26 7 V
26 15 V
26 -32 V
26 -16 V
25 18 V
26 -7 V
26 -13 V
26 -24 V
26 -1 V
26 -8 V
26 8 V
26 14 V
25 -11 V
26 15 V
26 -17 V
26 -7 V
26 14 V
26 10 V
26 10 V
26 1 V
26 0 V
25 10 V
26 9 V
26 1 V
26 4 V
26 0 V
6215 7956 BoxF
6241 7598 BoxF
6267 7516 BoxF
6293 7199 BoxF
6319 6951 BoxF
6344 6877 BoxF
6370 6647 BoxF
6396 6473 BoxF
6422 6170 BoxF
6448 6018 BoxF
6474 5928 BoxF
6500 5843 BoxF
6526 5722 BoxF
6552 5656 BoxF
6577 5558 BoxF
6603 5571 BoxF
6629 5519 BoxF
6655 5484 BoxF
6681 5464 BoxF
6707 5471 BoxF
6733 5439 BoxF
6759 5419 BoxF
6784 5387 BoxF
6810 5371 BoxF
6836 5366 BoxF
6862 5343 BoxF
6888 5283 BoxF
6914 5247 BoxF
6940 5231 BoxF
6966 5205 BoxF
6992 5173 BoxF
7017 5167 BoxF
7043 5176 BoxF
7069 5145 BoxF
7095 5118 BoxF
7121 5125 BoxF
7147 5131 BoxF
7173 5123 BoxF
7199 5105 BoxF
7225 5109 BoxF
7250 5104 BoxF
7276 5081 BoxF
7302 5072 BoxF
7328 5086 BoxF
7354 5087 BoxF
7380 5094 BoxF
7406 5109 BoxF
7432 5077 BoxF
7458 5061 BoxF
7483 5079 BoxF
7509 5072 BoxF
7535 5059 BoxF
7561 5035 BoxF
7587 5034 BoxF
7613 5026 BoxF
7639 5034 BoxF
7665 5048 BoxF
7690 5037 BoxF
7716 5052 BoxF
7742 5035 BoxF
7768 5028 BoxF
7794 5042 BoxF
7820 5052 BoxF
7846 5062 BoxF
7872 5063 BoxF
7898 5063 BoxF
7923 5073 BoxF
7949 5082 BoxF
7975 5083 BoxF
8001 5087 BoxF
8027 5087 BoxF
7659 7690 BoxF
1.000 UP
0.500 UL
LTb
grestore % colour palette end
gsave % colour palette begin
/maxcolors 256 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0039 .0078 .0118 .0157 .0196 .0235 .0275 .0314 .0353 .0392 .0431 
  .0471 .051 .0549 .0588 .0627 .0667 .0706 .0745 .0784 .0824 .0863 .0902 
  .0941 .098 .102 .1059 .1098 .1137 .1176 .1216 .1255 .1294 .1333 .1373 
  .1412 .1451 .149 .1529 .1569 .1608 .1647 .1686 .1725 .1765 .1804 .1843 
  .1882 .1922 .1961 .2 .2039 .2078 .2118 .2157 .2196 .2235 .2275 .2314 .2353 
  .2392 .2431 .2471 .251 .2549 .2588 .2627 .2667 .2706 .2745 .2784 .2824 
  .2863 .2902 .2941 .298 .302 .3059 .3098 .3137 .3176 .3216 .3255 .3294 
  .3333 .3373 .3412 .3451 .349 .3529 .3569 .3608 .3647 .3686 .3725 .3765 
  .3804 .3843 .3882 .3922 .3961 .4 .4039 .4078 .4118 .4157 .4196 .4235 .4275 
  .4314 .4353 .4392 .4431 .4471 .451 .4549 .4588 .4627 .4667 .4706 .4745 
  .4784 .4824 .4863 .4902 .4941 .498 .502 .5059 .5098 .5137 .5176 .5216 
  .5255 .5294 .5333 .5373 .5412 .5451 .549 .5529 .5569 .5608 .5647 .5686 
  .5725 .5765 .5804 .5843 .5882 .5922 .5961 .6 .6039 .6078 .6118 .6157 .6196 
  .6235 .6275 .6314 .6353 .6392 .6431 .6471 .651 .6549 .6588 .6627 .6667 
  .6706 .6745 .6784 .6824 .6863 .6902 .6941 .698 .702 .7059 .7098 .7137 
  .7176 .7216 .7255 .7294 .7333 .7373 .7412 .7451 .749 .7529 .7569 .7608 
  .7647 .7686 .7725 .7765 .7804 .7843 .7882 .7922 .7961 .8 .8039 .8078 .8118 
  .8157 .8196 .8235 .8275 .8314 .8353 .8392 .8431 .8471 .851 .8549 .8588 
  .8627 .8667 .8706 .8745 .8784 .8824 .8863 .8902 .8941 .898 .902 .9059 
  .9098 .9137 .9176 .9216 .9255 .9294 .9333 .9373 .9412 .9451 .949 .9529 
  .9569 .9608 .9647 .9686 .9725 .9765 .9804 .9843 .9882 .9922 .9961 1 ] def
/RedA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/GreenA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/BlueA [0 .0216 .0674 .1024 .1267 .1482 .1671 .1887 .1995 .2156 .221 .2345 
  .2453 .2507 .2561 .2668 .2749 .283 .2911 .2965 .3019 .31 .3127 .3181 .3261 
  .3315 .3342 .3396 .345 .3504 .3558 .3639 .3666 .3693 .372 .3747 .3801 
  .3827 .3854 .3881 .3908 .3935 .3962 .3989 .4016 .4043 .407 .4124 .4151 
  .4178 .4205 .4232 .4259 .4286 .4313 .434 .4367 .4394 .442 .4447 .4474 
  .4501 .4528 .4555 .4582 .4609 .4636 .4663 .469 .4717 .4744 .4771 .4798 
  .4825 .4852 .4879 .4906 .4933 .496 .4987 .5013 .504 .5067 .5094 .5121 
  .5148 .5175 .5202 .5229 .5256 .5283 .531 .5337 .5364 .5391 .5418 .5445 
  .5472 .5499 .5526 .5553 .558 .5606 .5633 .566 .5687 .5714 .5741 .5768 
  .5795 .5822 .5849 .5876 .5903 .593 .5957 .5984 .6011 .6038 .6065 .6092 
  .6119 .6146 .6173 .6199 .6226 .6253 .628 .6307 .6334 .6361 .6388 .6415 
  .6442 .6469 .6496 .6523 .655 .6577 .6604 .6631 .6658 .6685 .6712 .6739 
  .6765 .6792 .6819 .6846 .6873 .69 .6927 .6954 .6981 .7008 .7035 .7062 
  .7089 .7116 .7143 .717 .7197 .7251 .7278 .7305 .7358 .7385 .7412 .7466 
  .7493 .752 .7547 .7601 .7628 .7655 .7682 .7709 .7736 .7763 .779 .7817 
  .7871 .7898 .7951 .7978 .8005 .8032 .8086 .8113 .814 .8167 .8194 .8221 
  .8275 .8302 .8329 .8356 .8383 .841 .8437 .8464 .8518 .8544 .8571 .8598 
  .8625 .8652 .8679 .8706 .8733 .876 .8787 .8814 .8841 .8868 .8895 .8922 
  .8949 .8976 .9003 .903 .9057 .9084 .9111 .9137 .9164 .9191 .9218 .9245 
  .9272 .9299 .9326 .9353 .938 .9407 .9434 .9461 .9515 .9542 .9569 .9596 
  .9623 .965 .9677 .9704 .973 .9757 .9784 .9811 .9838 .9865 .9892 .9919 
  .9946 .9973 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
1475 5013 M
1811 0 V
stroke
0.500 UL
LTb
1475 5013 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5013 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 5505 M
1811 0 V
stroke
0.500 UL
LTb
1475 5505 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5505 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 5996 M
1811 0 V
stroke
0.500 UL
LTb
1475 5996 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 5996 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 6488 M
1811 0 V
stroke
0.500 UL
LTb
1475 6488 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 6488 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 6980 M
1811 0 V
stroke
0.500 UL
LTb
1475 6980 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 6980 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 7471 M
1811 0 V
stroke
0.500 UL
LTb
1475 7471 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7471 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1475 7963 M
1811 0 V
stroke
0.500 UL
LTb
1475 7963 M
88 0 V
1723 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1391 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MRshow
0.500 UL
LTb
1.000 UL
LTa
1708 5013 M
0 2950 V
stroke
0.500 UL
LTb
1708 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 1708 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
1967 5013 M
0 2950 V
stroke
0.500 UL
LTb
1967 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 1967 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2225 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2225 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2225 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (30)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2484 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2484 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2484 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (40)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
2743 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
2743 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 2743 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (50)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
3001 5013 M
0 2607 V
0 280 R
0 63 V
stroke
0.500 UL
LTb
3001 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3001 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (60)]
] -40.0 MCshow
0.500 UL
LTb
1.000 UL
LTa
3260 5013 M
0 2950 V
stroke
0.500 UL
LTb
3260 5013 M
0 88 V
0 2862 R
0 -88 V
stroke
0.00 0.00 0.00 C 3260 4873 M
[ [(Helvetica) 120.0 0.0 true true 0 (70)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7963 N
0 -2950 V
1811 0 V
0 2950 V
-1811 0 V
Z stroke
0.00 0.00 0.00 C 1069 6488 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (erro\(%\))]
] -50.0 MCshow
grestore
LTb
0.00 0.00 0.00 C 2380 4663 M
[ [(Helvetica) 150.0 0.0 true true 0 (# atributos)]
] -50.0 MCshow
LTb
2380 8173 M
[ [(*-bold) 200.0 0.0 true true 0 (BGP)]
] -66.7 MCshow
1.000 UP
0.500 UL
LTb
1.000 UP
0.500 UL
LT0
0.00 0.00 1.00 C LTb
2635 7830 M
[ [(Helvetica) 140.0 0.0 true true 0 (MI BGP)]
] -46.7 MRshow
LT0
0.00 0.00 1.00 C 2719 7830 M
399 0 V
1475 7687 M
26 -314 V
26 -190 V
26 -92 V
25 0 V
26 -159 V
26 -215 V
26 -188 V
26 -126 V
26 -45 V
26 -56 V
26 -38 V
25 -62 V
26 -45 V
26 -81 V
26 -101 V
26 -9 V
26 -38 V
26 -11 V
26 -46 V
25 -16 V
26 -65 V
26 -21 V
26 6 V
26 -60 V
26 8 V
26 0 V
26 -7 V
25 -6 V
26 4 V
26 -22 V
26 -23 V
26 15 V
26 -42 V
26 6 V
25 28 V
26 11 V
26 -26 V
26 14 V
26 -49 V
26 -1 V
26 -18 V
26 1 V
25 -15 V
26 7 V
26 -19 V
26 7 V
26 -28 V
26 3 V
26 -10 V
26 7 V
25 -8 V
26 -11 V
26 -8 V
26 -2 V
26 -9 V
26 0 V
26 1 V
26 -14 V
25 -13 V
26 -12 V
26 -5 V
26 -3 V
26 2 V
26 -3 V
26 5 V
26 -8 V
25 -4 V
26 -3 V
26 3 V
26 0 V
1475 7687 Crs
1501 7373 Crs
1527 7183 Crs
1553 7091 Crs
1578 7091 Crs
1604 6932 Crs
1630 6717 Crs
1656 6529 Crs
1682 6403 Crs
1708 6358 Crs
1734 6302 Crs
1760 6264 Crs
1785 6202 Crs
1811 6157 Crs
1837 6076 Crs
1863 5975 Crs
1889 5966 Crs
1915 5928 Crs
1941 5917 Crs
1967 5871 Crs
1992 5855 Crs
2018 5790 Crs
2044 5769 Crs
2070 5775 Crs
2096 5715 Crs
2122 5723 Crs
2148 5723 Crs
2174 5716 Crs
2199 5710 Crs
2225 5714 Crs
2251 5692 Crs
2277 5669 Crs
2303 5684 Crs
2329 5642 Crs
2355 5648 Crs
2380 5676 Crs
2406 5687 Crs
2432 5661 Crs
2458 5675 Crs
2484 5626 Crs
2510 5625 Crs
2536 5607 Crs
2562 5608 Crs
2587 5593 Crs
2613 5600 Crs
2639 5581 Crs
2665 5588 Crs
2691 5560 Crs
2717 5563 Crs
2743 5553 Crs
2769 5560 Crs
2794 5552 Crs
2820 5541 Crs
2846 5533 Crs
2872 5531 Crs
2898 5522 Crs
2924 5522 Crs
2950 5523 Crs
2976 5509 Crs
3001 5496 Crs
3027 5484 Crs
3053 5479 Crs
3079 5476 Crs
3105 5478 Crs
3131 5475 Crs
3157 5480 Crs
3183 5472 Crs
3208 5468 Crs
3234 5465 Crs
3260 5468 Crs
3286 5468 Crs
2918 7830 Crs
1.000 UP
0.500 UL
LT1
0.00 0.50 0.00 C LTb
2635 7690 M
[ [(Helvetica) 140.0 0.0 true true 0 (CSF BGP)]
] -46.7 MRshow
LT1
0.00 0.50 0.00 C 2719 7690 M
399 0 V
1475 7452 M
26 -79 V
26 -128 V
26 -114 V
25 -152 V
26 -210 V
26 -129 V
26 -284 V
26 -99 V
26 -82 V
26 -57 V
26 -103 V
25 -83 V
26 -74 V
26 -28 V
26 -12 V
26 -21 V
26 -28 V
26 1 V
26 -20 V
25 -23 V
26 -14 V
26 -16 V
26 -22 V
26 -15 V
26 -10 V
26 -38 V
26 -16 V
25 -5 V
26 -12 V
26 -10 V
26 -1 V
26 -23 V
26 -5 V
26 -7 V
25 -15 V
26 1 V
26 -7 V
26 -6 V
26 -5 V
26 -4 V
26 -10 V
26 -8 V
25 -21 V
26 -2 V
26 3 V
26 -9 V
26 -11 V
26 -1 V
26 7 V
26 -1 V
25 -12 V
26 -8 V
26 4 V
26 5 V
26 12 V
26 0 V
26 1 V
26 1 V
25 2 V
26 2 V
26 4 V
26 -1 V
26 2 V
26 6 V
26 2 V
26 2 V
25 1 V
26 -2 V
26 3 V
26 0 V
1475 7452 BoxF
1501 7373 BoxF
1527 7245 BoxF
1553 7131 BoxF
1578 6979 BoxF
1604 6769 BoxF
1630 6640 BoxF
1656 6356 BoxF
1682 6257 BoxF
1708 6175 BoxF
1734 6118 BoxF
1760 6015 BoxF
1785 5932 BoxF
1811 5858 BoxF
1837 5830 BoxF
1863 5818 BoxF
1889 5797 BoxF
1915 5769 BoxF
1941 5770 BoxF
1967 5750 BoxF
1992 5727 BoxF
2018 5713 BoxF
2044 5697 BoxF
2070 5675 BoxF
2096 5660 BoxF
2122 5650 BoxF
2148 5612 BoxF
2174 5596 BoxF
2199 5591 BoxF
2225 5579 BoxF
2251 5569 BoxF
2277 5568 BoxF
2303 5545 BoxF
2329 5540 BoxF
2355 5533 BoxF
2380 5518 BoxF
2406 5519 BoxF
2432 5512 BoxF
2458 5506 BoxF
2484 5501 BoxF
2510 5497 BoxF
2536 5487 BoxF
2562 5479 BoxF
2587 5458 BoxF
2613 5456 BoxF
2639 5459 BoxF
2665 5450 BoxF
2691 5439 BoxF
2717 5438 BoxF
2743 5445 BoxF
2769 5444 BoxF
2794 5432 BoxF
2820 5424 BoxF
2846 5428 BoxF
2872 5433 BoxF
2898 5445 BoxF
2924 5445 BoxF
2950 5446 BoxF
2976 5447 BoxF
3001 5449 BoxF
3027 5451 BoxF
3053 5455 BoxF
3079 5454 BoxF
3105 5456 BoxF
3131 5462 BoxF
3157 5464 BoxF
3183 5466 BoxF
3208 5467 BoxF
3234 5465 BoxF
3260 5468 BoxF
3286 5468 BoxF
2918 7690 BoxF
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: *-bold Helvetica
